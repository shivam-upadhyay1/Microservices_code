package com.lcwd.user.service.services.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.lcwd.user.service.entities.Hotel;
import com.lcwd.user.service.entities.Rating;
import com.lcwd.user.service.entities.User;
import com.lcwd.user.service.exceptions.ResourceNotFoundException;
import com.lcwd.user.service.repositories.UserRepository;
import com.lcwd.user.service.services.UserService;
@Service
public class UserServiceImpl implements UserService
{

	@Autowired
	private UserRepository userRepository;
	@Autowired
	private RestTemplate restTemplate;
	
	private Logger logger=LoggerFactory.getLogger(UserServiceImpl.class);
	@Override
	public User saveUser(User user) {
		//generate unique userId  using UUID=> it will generate all time unique id
		String randomUserId = UUID.randomUUID().toString();
		user.setUserId(randomUserId);
		return userRepository.save(user);
	}

	@Override
	public List<User> getAllUser() {
		return userRepository.findAll();
	}

	//get single user
	@Override
	public User getUser(String userId) {
	//get user from database with the help of user repository	
		 User user = userRepository.findById(userId).orElseThrow(()-> new ResourceNotFoundException("User with given id is not found on server !! : "+userId));
	  //fetch rating of the above user from the RATING SERVICE
//http://localhost:8084/ratings/users/2cb978cf-984b-4923-bd37-82025e324b7a
//to call http API we have many options like restTemplate,feign client etc
		 
		 ArrayList<Rating>ratingsOfUser = restTemplate.getForObject("http://localhost:8084/ratings/users/"+user.getUserId(), ArrayList.class);
		 logger.info("{} ",ratingsOfUser);
		 
	user.setRatings(ratingsOfUser);   //user ke ander sari ratings agyi
		 return user;
	}

	
}
